============================ How to hack Viola ================================

======= Why modify Viola? ===============================================

  Viola is currently an experimental protocol! It doesn't do much, but it's a
  playground that you can use to test various ideas and designs for multiparty
  messaging. For example, you might modify viola to try new UX ideas, or
  integrate it with other secure messaging protocols like OTR or Pond. You can
  change the method of authentication, or key exchange. You can try implementing
  leader election algorithms, introducing deniability to the protocol or
  implementing 1-to-1 secure chat.

  Good designs and ideas should be merged upstream, but having fun is most important!

  This is why this guide will teach you how to modify and experiment with Viola!

======= Experimentation Setup ============================================

  To experiment with Viola, we will setup an IRC server on our local system. We
  will then setup multiple weechat's to run Viola and connect to the IRC server.

  The guide is designed for Debian-like systems, but you can probably follow it
  with any Linux distro. This guide will not explain every little detail; it
  just walks you through the general process in case you haven't done it before.

============= Setting up an IRC server =========================================

  I opted for using ircd-hybrid which is quite simple to setup and configure.

  In Debian I installed by doing # apt-get install ircd-hybrid

  Then I edited /etc/ircd-hybrid/ircd.motd and followed the instructions in
  that file.

  Then I edited /etc/ircd-hybrid/ircd.conf and edited the 'listen' block and
  had it bind on localhost (127.0.0.1) .

  Then I restarted the IRC daemon by doing: # service ircd-hybrid restart

  If everything goes well, ircd-hybrid should be listening on 127.0.0.1:6667
  (or the port you specified in ircd.conf).

============= Setting up Viola =================================================

  Now follow the README file to download Viola and its dependencies (pynacl, etc.)

  Run weechat once, so that it creates its config directory at ~/.weechat .
  Now install Viola to ~/.weechat/ by doing $ make dev-install
  This will create symlinks of viola into ~/.weechat/python/

  Now let's configure weechat. While in weechat do the following:

        /server add test 127.0.0.1/6667
        /set irc.server.test.ssl off
        /connect test

  If all went well, you should be connected to your local IRC server! If it
  doesn't work make sure you got the IP/ports right.

  You can also test your Viola installation by doing:

        /script load weechat_viola.py

  That should load up viola! Make sure it loads and squeaks!!

  Now you can also add the /start weechat alias that will automatically load up
  viola and connect to your test server:

        /alias add start /script load weechat_viola.py ; /connect test

   So now you can just startup weechat and run /start and you should be set!

   And as a final and most important step, save your current configuration:

        /save

   This guide won't work if you don't save your configuration!!!

============= More Violas! ======================================================

  Viola is a multiparty messaging protocol, so you need more than one client to
  experiment! This guide will show you how to setup 3 local viola clients!

  So assuming you followed the previous section, you should have a good weechat
  installation at .weechat .

  We are going to need more weechat home directories for the other clients, so
  copy the existing one around:

       $ cp -r ~/.weechat ~/.weechatbob
       $ cp -r ~/.weechat ~/.weechatcharlie

  Now you can start up 3 viola clients by doing:

       $ weechat --dir ~/.weechat
       $ weechat --dir ~/.weechatbob
       $ weechat --dir ~/.weechatcharlie

  Make sure you assign different nicks to each of those installations. You can
  do this by doing:

       /set irc.server.test.nicks "alice"

  Set the other installation nicknames to "bob" and "charlie" or whatever you please.

============= Have fun! ====================================================

  This concludes our little guide.

  You should now have three weechat installations that you can start up and
  bootstrap with the /start command. Each of them has a different nickname, and
  they all have the viola codebase symlinked into them, so any changes you do
  to viola will be reflected on weechat after you restart.

  Join an IRC channel, and "start-room" with one viola client. Then join with
  the others and do "join-room". Bam! Play away!

============= Issues =======================================================

  Unfortunately, because of weechat and PyNaCl limitations you can't call
  /start twice to restart viola. You instead need to restart weechat...





